import{_ as e,p as t,q as l,Z as i}from"./framework-fdd38eac.js";const d={},a=i('<h1 id="dom盒子模型" tabindex="-1"><a class="header-anchor" href="#dom盒子模型" aria-hidden="true">#</a> DOM盒子模型</h1><h2 id="常用的dom操作属性和方法" tabindex="-1"><a class="header-anchor" href="#常用的dom操作属性和方法" aria-hidden="true">#</a> 常用的DOM操作属性和方法</h2><p>获取元素或者元素集合</p><ul><li>getElementById 上下文只能是document（只有document这个实例的原型链上才能找到这个方法，其他实例都找不到） id重复了获取第一个 IE6~7中会把表单元素的name当作id使用</li><li>getElementsByTagName 获取当前上下文中，所有子子孙孙中标签名叫做xxx的元素</li><li>getElementsByClassName IE6~8中不兼容</li><li>getElementsByName 在IE浏览器中只对表单元素的name起作用 上下文也只能是document</li><li>querySelector</li><li>querySelectorAll 不兼容IE6~8 没有DOM映射</li><li>document.documentElement html</li><li>document.body body</li><li>document.head head标签</li></ul><p>描述节点和节点之间关系的属性</p><table><thead><tr><th style="text-align:center;"></th><th style="text-align:center;">nodeType</th><th style="text-align:center;">nodeName</th><th style="text-align:center;">nodeValue</th></tr></thead><tbody><tr><td style="text-align:center;">元素节点</td><td style="text-align:center;">1</td><td style="text-align:center;">大写标签名</td><td style="text-align:center;">null</td></tr><tr><td style="text-align:center;">文本节点</td><td style="text-align:center;">3</td><td style="text-align:center;">#text</td><td style="text-align:center;">文本内容</td></tr><tr><td style="text-align:center;">注释节点</td><td style="text-align:center;">8</td><td style="text-align:center;">#comment</td><td style="text-align:center;">注释内容</td></tr><tr><td style="text-align:center;">文档节点</td><td style="text-align:center;">9</td><td style="text-align:center;">#document</td><td style="text-align:center;">null</td></tr></tbody></table><ul><li>childNodes：所有子节点</li><li>children：所有元素子节点（IE6~8中会把注释当做元素节点）</li><li>parentNode</li><li>previousSibling / previousElementSibling</li><li>nextSibling</li><li>firstChild</li><li>lastChild</li></ul><p>动态操作DOM</p><ul><li>createElement</li><li>createDocumentFragment</li><li>appendChild</li><li>insertBefore</li><li>cloneNode(true/false)</li><li>removeChild</li><li>set/get/removeAttribute</li></ul><p>零散知识点</p><ul><li><code>xxx.style.xxx=xxx</code> 设置行内样式</li><li><code>xxx.style.xxx</code> 获取行内样式</li><li><code>xxx.className=&#39;xxx&#39;</code></li><li><code>xxx.onclick=function...</code></li></ul><h2 id="js盒子模型属性第一部分" tabindex="-1"><a class="header-anchor" href="#js盒子模型属性第一部分" aria-hidden="true">#</a> js盒子模型属性第一部分</h2><p>在JS中通过相关的属性可以获取(设置)元素的样式信息,这些属性就是盒子模型属性（基本上都是有关于样式的）</p><ul><li>client <ul><li>top</li><li>left</li><li>width</li><li>height</li></ul></li><li>offset <ul><li>top</li><li>left</li><li>width</li><li>height</li><li>parent</li></ul></li><li>scroll <ul><li>top</li><li>left</li><li>width</li><li>height</li></ul></li></ul><h2 id="获取元素的具体样式" tabindex="-1"><a class="header-anchor" href="#获取元素的具体样式" aria-hidden="true">#</a> 获取元素的具体样式</h2><h2 id="封装set-css设置元素的样式" tabindex="-1"><a class="header-anchor" href="#封装set-css设置元素的样式" aria-hidden="true">#</a> 封装set-css设置元素的样式</h2><h2 id="封装set-group-css批量设置元素的样式" tabindex="-1"><a class="header-anchor" href="#封装set-group-css批量设置元素的样式" aria-hidden="true">#</a> 封装set-group-css批量设置元素的样式</h2><h2 id="封装utils库实现css方法统一操作样式" tabindex="-1"><a class="header-anchor" href="#封装utils库实现css方法统一操作样式" aria-hidden="true">#</a> 封装utils库实现css方法统一操作样式</h2><h2 id="盒子偏移量和offet" tabindex="-1"><a class="header-anchor" href="#盒子偏移量和offet" aria-hidden="true">#</a> 盒子偏移量和offet</h2><h2 id="滚动条卷去的宽度和高度" tabindex="-1"><a class="header-anchor" href="#滚动条卷去的宽度和高度" aria-hidden="true">#</a> 滚动条卷去的宽度和高度</h2><h2 id="灯案例" tabindex="-1"><a class="header-anchor" href="#灯案例" aria-hidden="true">#</a> 灯案例</h2>',21),n=[a];function r(s,c){return t(),l("div",null,n)}const o=e(d,[["render",r],["__file","index.html.vue"]]);export{o as default};
