import{_ as a,p as n,q as s,Z as t}from"./framework-fdd38eac.js";const p="/assets/tt-ca66215e.png",e="/assets/th-8fa00264.png",l="/assets/thead-0938befc.png",i={},c=t(`<h1 id="html" tabindex="-1"><a class="header-anchor" href="#html" aria-hidden="true">#</a> HTML</h1><h2 id="浏览器内核" tabindex="-1"><a class="header-anchor" href="#浏览器内核" aria-hidden="true">#</a> 浏览器内核</h2><p>浏览器内核分为两个部分: 渲染引擎(layout engineer或Rendering Engine)和js引擎</p><p>渲染引擎: (主要渲染html 和css).获得网页的内容(html xml 图像等),再读取css整理,计算网页的显示方式,然后输出到显示器,内核不同渲染出来的效果不同.</p><p>js引擎:解析javascript语言,执行javascript语言来实现网页动态效果.</p><h4 id="内核分类" tabindex="-1"><a class="header-anchor" href="#内核分类" aria-hidden="true">#</a> 内核分类:</h4><ul><li>trident内核(IE):</li></ul><p>IE内核</p><p>双核浏览器的其中一核是Trident,称这一内核为&quot;兼容模式&quot;</p><p>代表:IE 傲游 世界之窗浏览器 Avant 腾讯TT 猎豹安全浏览器 360极速浏览器 百度浏览器</p><p>window10发布后,加了新浏览器Edge,Edge有新内核EdgeHTML.</p><ul><li>Gecko(firefox)</li></ul><p>Moailla FireFox使用. 该浏览器内核代码公开,可开发程度高,全时间程序员都可以为其编写代码.近年来没落,更新频繁,打开速度慢.</p><ul><li>webkit(Safari)</li></ul><p>Safari是苹果公司开发的浏览器,内核是webkit.</p><p>代表浏览器:傲游浏览器3 Apple Safari(win/mac/iphone/ipad) Symbian手机浏览器 Android默认浏览器</p><ul><li>Chromium/Blink(chrome)</li></ul><p>在Chromium项目中研发Blink渲染引擎(浏览器核心),内置于chrome浏览器中,Blink是Webkit分支.</p><p>大部分国产浏览器最新版采用Blink内核,二次开发的.</p><ul><li>Presto(Opera)</li></ul><p>Presto(已经废弃)是opera浏览器已被废弃的内核,最新的opera浏览器用的是Blink的内核.</p><p>了解:</p><p>移动端的浏览器内核主要说内置浏览器的内核.</p><p>Android手机而言,使用率最高的是Webkit内核,大部分国产浏览器宣称自己的内核,实际上市webkit的二次开发.</p><p>ios是Safari浏览器</p><p>WP7平台自带浏览器内核是IE的Trident内核.</p><h2 id="web标准" tabindex="-1"><a class="header-anchor" href="#web标准" aria-hidden="true">#</a> Web标准</h2><p>浏览器内核不同,工作原理,解析不同.开发者常常需要开发多版本.</p><p>通过web标准---&gt;各种内核的浏览器---&gt;展示统一的内容</p><h4 id="web标准的好处" tabindex="-1"><a class="header-anchor" href="#web标准的好处" aria-hidden="true">#</a> web标准的好处:</h4><p>1.让web开发前进更广阔</p><p>2.内容能被更广泛的设备访问</p><p>3.更容易被搜索引擎搜索</p><p>4.降低网站流量费用</p><p>5.使网站更易于维护</p><p>6.提高页面浏览速度</p><h4 id="web标准构成" tabindex="-1"><a class="header-anchor" href="#web标准构成" aria-hidden="true">#</a> web标准构成</h4><p>web标准不是一个标准,是由W3C和其他标准化组织制定的一系列标准的集合.</p><p>主要包括结构(structure) ,表现(Presentation),行为(Behavior)三个方面.</p><p>结构标准:结构用于对网页元素进行整理和分类.html</p><p>表现标准:表现用于设置网页元素的板式,颜色,大小等外观样式.css</p><p>行为标准:行为是指网页模型的定义及交互的编写.js</p><h2 id="文档类型" tabindex="-1"><a class="header-anchor" href="#文档类型" aria-hidden="true">#</a> 文档类型</h2><p><code>&lt;!DOCTYPE&gt;</code>标签位于文档的最前面,用于向浏览器说明当前文档使用哪种html或xhtml标准规范,必须在开头处使用.</p><h2 id="字符集" tabindex="-1"><a class="header-anchor" href="#字符集" aria-hidden="true">#</a> 字符集</h2><p>utf-8是目前最常用的字符集编码方式,常用的字符集编码方式还有gbk和gb2312.</p><p>gb2312简单中文 包括6763个汉字</p><p>BIG5 繁体中文 港澳台等用</p><p>GBK包含全部中文字符 是gb2312的扩展,加入对繁体字的支持,兼容gb2312</p><p>utf-8则包含全世界所有国家需要用到的字符</p><p>注意:以后统统使用utf-8字符集,就可以避免出现字符集不同意二引起乱码的情况了.</p><h2 id="html常用标签" tabindex="-1"><a class="header-anchor" href="#html常用标签" aria-hidden="true">#</a> html常用标签</h2><h4 id="文格式化标签" tabindex="-1"><a class="header-anchor" href="#文格式化标签" aria-hidden="true">#</a> 文格式化标签:</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;b&gt;&lt;/b&gt;&lt;strong&gt;&lt;/strong&gt;   文字粗体
&lt;i&gt;&lt;/i&gt;&lt;em&gt;&lt;/em&gt;    文字斜体
&lt;s&gt;&lt;/s&gt;&lt;del&gt;&lt;/del&gt;   删除线
&lt;u&gt;&lt;/u&gt;&lt;ins&gt;&lt;/ins&gt;   下划线
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>b i s u没有强调的意思 strong em del ins 语义更强烈</p><h4 id="标签属性" tabindex="-1"><a class="header-anchor" href="#标签属性" aria-hidden="true">#</a> 标签属性:</h4><p>1.属性之间不分先后顺序,标签名与属性,属性与属性之间均以空格分开.</p><p>2.任何标签的属性都有默认值,省略该属性则取默认值.</p><p>采取 键值对 的格式 key=&quot;value&quot;的格式</p><h5 id="base标签" tabindex="-1"><a class="header-anchor" href="#base标签" aria-hidden="true">#</a> base标签:</h5><p>base可以设置整体链接的打开状态</p><p>base写在<code>&lt;head&gt;&lt;/head&gt;</code>之间</p><p>把所有链接都默认添加target=&quot;_blank&quot;;</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;head&gt;
&lt;base target=&quot;_blank /&gt;
&lt;/head&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="特殊字符标签" tabindex="-1"><a class="header-anchor" href="#特殊字符标签" aria-hidden="true">#</a> 特殊字符标签:</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token entity named-entity" title=" ">&amp;nbsp;</span> 空格
<span class="token entity named-entity" title="&lt;">&amp;lt;</span>  &lt;
<span class="token entity named-entity" title="&gt;">&amp;gt;</span>  &gt;
<span class="token entity named-entity" title="©">&amp;copy;</span>  版权
<span class="token entity named-entity" title="®">&amp;reg;</span>   注册商标
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="定位" tabindex="-1"><a class="header-anchor" href="#定位" aria-hidden="true">#</a> 定位</h2><p><strong>第一种情况:只有自己一个元素(div),父元素就是body.</strong></p><p>此时div绝对定位:</p><p>距离左边界的距离=(margin-left)+left.</p><p>(和自己是否有margin-left无关,只看父元素是否有padding-left)</p><p>此时div相对定位:</p><p>距离左边界的距离=(margin-left)+left.</p><p><strong>第二种情况:有两个div嵌套,根元素时body</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bigdv<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dv<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>有一种情形是父元素定位,子元素绝对定位时.</p><p>子元素先定位,没有设置left的时候,父元素的padding-left还会有效果,(因为此时的left有一个默认值,默认值不是0,其实默认值就是padding-left的值).如果加了left:10,那么padding-left会失效,因为定位开始了,以left优先.top同理.</p><p>因为子元素绝对定位如果加了left或top 是以最近的定位了的外层元素的border内边界为基准来偏移的.(偏移的区域包含了padding和文字区)</p><h2 id="列表标签" tabindex="-1"><a class="header-anchor" href="#列表标签" aria-hidden="true">#</a> 列表标签</h2><h3 id="无序列表-ul" tabindex="-1"><a class="header-anchor" href="#无序列表-ul" aria-hidden="true">#</a> 无序列表 ul</h3><p>无序列表的各个列表项之间没有顺序级别之分，是并列的。其基本语法格式如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>列表项1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>列表项2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>列表项3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  ......
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> 1. &lt;ul&gt;&lt;/ul&gt;中只能嵌套&lt;li&gt;&lt;/li&gt;，直接在&lt;ul&gt;&lt;/ul&gt;标签中输入其他标签或者文字的做法是不被允许的。
 2. &lt;li&gt;与&lt;/li&gt;之间相当于一个容器，可以容纳所有元素。
 3. 无序列表会带有自己样式属性
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="有序列表-ol" tabindex="-1"><a class="header-anchor" href="#有序列表-ol" aria-hidden="true">#</a> 有序列表 ol</h3><p>有序列表即为有排列顺序的列表，其各个列表项按照一定的顺序排列定义，有序列表的基本语法格式如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>列表项1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>列表项2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>列表项3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  ......
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所有特性基本与ul 一致。</p><p>但是实际工作中， 较少用 ol</p><h3 id="自定义列表" tabindex="-1"><a class="header-anchor" href="#自定义列表" aria-hidden="true">#</a> 自定义列表</h3><p>定义列表常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号。其基本语法如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">&gt;</span></span>名词1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>名词1解释1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>名词1解释2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span>
  ...
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">&gt;</span></span>名词2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>名词2解释1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>名词2解释2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span>
  ...
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="表格-table" tabindex="-1"><a class="header-anchor" href="#表格-table" aria-hidden="true">#</a> 表格 table</h2><h3 id="创建表格" tabindex="-1"><a class="header-anchor" href="#创建表格" aria-hidden="true">#</a> 创建表格</h3><p>在HTML网页中，要想创建表格，就需要使用表格相关的标签。创建表格的基本语法格式如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>单元格内的文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
    ...
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
  ...
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：</p><p><code>&lt;tr&gt;&lt;/tr&gt;</code>中只能嵌套<code>&lt;td&gt;&lt;/td&gt;</code></p><p><code>&lt;td&gt;&lt;/td&gt;</code>标签，他就像一个容器，可以容纳所有的元素</p><h3 id="表格属性" tabindex="-1"><a class="header-anchor" href="#表格属性" aria-hidden="true">#</a> 表格属性</h3><img src="`+p+'"><p>三参为0 border cellpadding cellspacing 为 0</p><h3 id="表头标签" tabindex="-1"><a class="header-anchor" href="#表头标签" aria-hidden="true">#</a> 表头标签</h3><p>表头单元格一般位于表格的第一行或第一列，其文本加粗居中，如下图所示，即为设置了表头的表格。设置表头非常简单，只需用表头标签&lt;th&gt;&lt;/th&gt;替代相应的单元格标签&lt;td&gt;&lt;/td&gt;即可。</p><img src="'+e+`"><h3 id="表格结构" tabindex="-1"><a class="header-anchor" href="#表格结构" aria-hidden="true">#</a> 表格结构</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>在使用表格进行布局时，可以将表格划分为头部、主体和页脚（页脚因为有兼容性问题，我们不在赘述），具体 如下所示：

&lt;thead&gt;&lt;/thead&gt;：用于定义表格的头部。

必须位于&lt;table&gt;&lt;/table&gt; 标签中，一般包含网页的logo和导航等头部信息。


&lt;tbody&gt;&lt;/tbody&gt;：用于定义表格的主体。

位于&lt;table&gt;&lt;/table&gt;标签中，一般包含网页中除头部和底部之外的其他内容。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="`+l+`"><p>例子:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>Month<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>Savings<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tfoot</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>Sum<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>$180<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tfoot</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>January<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>$100<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>February<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>$80<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="表格标题" tabindex="-1"><a class="header-anchor" href="#表格标题" aria-hidden="true">#</a> 表格标题</h3><p><strong>表格的标题： caption</strong></p><p><strong>定义和用法</strong></p><p>caption 元素定义表格标题。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>caption</span><span class="token punctuation">&gt;</span></span>我是表格标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>caption</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>caption 标签必须紧随 table 标签之后。</p><p>只存在 表格里面</p><p>只能对每个表格定义一个标题。通常这个标题会被居中于表格之上。</p><h3 id="合并单元格" tabindex="-1"><a class="header-anchor" href="#合并单元格" aria-hidden="true">#</a> 合并单元格</h3><p>跨行合并：rowspan 跨列合并：colspan 都是给单元格td用的</p><p>合并单元格的思想：</p><p>​ 将多个内容合并的时候，就会有多余的东西，把它删除。 例如 把 3个 td 合并成一个， 那就多余了2个，需要删除。</p><p>​ 公式： 删除的个数 = 合并的个数 - 1</p><p>合并的顺序 先上 后下 先左 后右</p><ol><li>先确定是跨行还是跨列合并</li><li>根据 先上 后下 先左 后右的原则找到目标单元格</li><li>删除单元格 删除的个数 = 合并的个数 - 1</li></ol><h3 id="总结表格" tabindex="-1"><a class="header-anchor" href="#总结表格" aria-hidden="true">#</a> 总结表格</h3><ol><li>表格提供了HTML 中定义表格式数据的方法。</li><li>表格中由行中的单元格组成。</li><li>表格中没有列元素，列的个数取决于行的单元格个数。</li><li>表格不要纠结于外观，那是CSS 的作用。</li></ol><h2 id="表单标签" tabindex="-1"><a class="header-anchor" href="#表单标签" aria-hidden="true">#</a> 表单标签</h2><p>在HTML中，一个完整的表单通常由表单控件（也称为表单元素）、提示信息和表单域3个部分构成。</p><p>表单控件：</p><p>​ 包含了具体的表单功能项，如单行文本输入框、密码输入框、复选框、提交按钮、重置按钮等。</p><p>提示信息：</p><p>​ 一个表单中通常还需要包含一些说明性的文字，提示用户进行填写和操作。</p><p>表单域：</p><p>​ 他相当于一个容器，用来容纳所有的表单控件和提示信息，可以通过他定义处理表单数据所用程序的url地址，以及数据提交到服务器的方法。如果不定义表单域，表单中的数据就无法传送到后台服务器。</p><h3 id="表单域" tabindex="-1"><a class="header-anchor" href="#表单域" aria-hidden="true">#</a> 表单域</h3><p>在HTML中，form标签被用于定义表单域，即创建一个表单，以实现用户信息的收集和传递，form中的所有内容都会被提交给服务器。创建表单的基本语法格式如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url地址<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>提交方式<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>表单名称<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  各种表单控件
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>常用属性：</p><ol><li>Action 在表单收集到信息后，需要将信息传递给服务器进行处理，action属性用于指定接收并处理表单数据的服务器程序的url地址。</li><li>method 用于设置表单数据的提交方式，其取值为get或post。</li><li>name 用于指定表单的名称，以区分同一个页面中的多个表单。</li></ol><p>注意： 每个表单都应该有自己表单域。</p>`,141),o=[c];function u(d,r){return n(),s("div",null,o)}const k=a(i,[["render",u],["__file","index.html.vue"]]);export{k as default};
